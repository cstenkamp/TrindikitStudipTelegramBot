Done
-Multiuser-version. Alles was user-specific ist ist jetzt nicht mehr multiple-inheritance vom DialogManger, sondern mit Datenbank
-Telegram-version (zusätzliche update-rules, .....)
-"Command"/"Imperative" als klassen hinzugefügt
-Ein Nein als antwort akzeptieren
-Quit und Greet zur grammar hinzugefügt
-einen Telegram-Chatbot draus machen
-Den IS (und den MIVS) statt per Pickle in ner Datenbank (->SQLAlchemy Object relational) speichern
-you know what, ich speicher den Kram in ner Datenbank. ==> SQLAlchemy, die ibis-klasse extended Base=declarative_base(), und für die werte .IS und .MVIS gibt es entsprechungen
-Information state approach erweiterung: Tentatively added stuff
-den IS bzw alle nötigen informationen speichern, sodass man die current session schließen kann und neu starten
-ein "exit"-kommando
-switch to python3
-man kann nein antworten (bug schon in original)

------------------------------------------------------------------------------------------------------------------------
TODO
-ein "repeat"-kommando einbrigen mit dem es die letzte utterance wiederholt
-per CI den Chatbot automatisch auf meinen webspace committen
-Sowohl Conversations (IS/MVIS) als auch Users (->gespeicherte commands) in separate Tables in ner Datenbank haben (user_db hat dann ein feld für die user-id, und ein feld für "current conversation/session"
-Sämtliche ICMs von https://pdfs.semanticscholar.org/0066/b5c5b49e1a7eb4ea95ee22984b695ec5d2c5.pdf benutzen, und bspw bei zu langer Wartezeit vom User 2 system responses machen können
-Dialog ist System-Antwort auf User-Nachricht, außerdem mixed initiative! Ein Event-System einführen wo das sytem schreiben kann! (erinner mich 15 minuten vor allen nächsten Kursen bis auf Widerruf)
-warum sind YNQs Props (brauchen im Konstruktor eine, und sind damit bereits vollwertige propositionen), während WhQs immer noch Pred1's sind? Warum nicht YNQs Pred1s über die Domain bool?
  -warum ist es YNQ(Prop((Pred0('return'), None, True))) und nicht YNQ(Pred0('return')) --> warum muss es nochmal in ner Prop sein wo noch Truth-value bei ist
  --> warum muss ein Pred0 den Umweg über Prop gehen?
-Higher-Order-Prop anstelle von Prop2, sodass halt aus ner HOProp jeweils mit argument ne andere HOProp (n-1) entstehen kann
-Domains automatisch erzeugen, statt so nervig wie ich das momentan noch mache
-Nicht nur ein gespräch gleichzeitig

-Tausend gespräche im RAM = 1000 instanzen der Klasse IBIS, die sehr viel RAM verbrauchen, und die auch irgendwie alle nen einzelnen Thread brauchen und alles?
->Ibis nach dem Preforked-server-approach für multiple users haben! (...und das gespräch mit einem User für jeweils 10 min oder so aktiv halten um den overhead des neu ladens zu sparen) (also lazy writing von SQLAlchemy)

-Telegram-special-features nutzen! Links in Nachrichten, das bereitstellen von Tastaturen
-Die unpack-funktion nutzen wenn nötig!!
-Das {kurs} etc umwandeln in der Grammar passiert 2 mal, which is sooo wrong!!!